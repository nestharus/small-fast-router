allprojects {
    plugins.withId('antlr') {
        def srcPath = projectDir.toString() + '/build/generated/sources/antlr/main/java'

        project.afterEvaluate {
            sourceSets {
                main {
                    java {
                        srcDir srcPath
                    }
                }
            }
        }

        def outputPath = file(projectDir.toString() + '/build/generated/sources/antlr/main/java/org/nestharus/parser')
        def grammarPath = file(projectDir.toString() + '/src/main/resources/grammar')

        generateGrammarSource {
            outputDirectory = outputPath
            source = fileTree(dir: grammarPath.absolutePath, include: '*.g4')
            arguments = [
                    '-visitor',
                    '-listener',
                    '-package', 'org.nestharus.parser',
                    '-lib', outputDirectory.absolutePath,
                    '-o', outputDirectory.absolutePath,
                    '-Xexact-output-dir'
            ]

            doFirst {
                new File(outputPath.absolutePath).mkdirs()
            }
        }

        compileJava.dependsOn generateGrammarSource
    }
}