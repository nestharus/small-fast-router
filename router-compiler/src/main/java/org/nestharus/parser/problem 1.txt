& is intersection of sets.
a&b would be the empty set.
!a&!b would be the set of all characters that does not contain a or b.
/&/? would be /&(/|/{0}) which would just be `/`


Simplify (aa)**/(aa)**
/?aa(/aa)*?/&/?aa(/aa)*?
(1+/)aa(/aa)*/^(1+/)aa(/aa)*
    (/)^(1+/) -> /
(1+/)aa(/aa)*/aa(/aa)*
    /aa (/aa)* -> (/aa){1,}
(1+/)aa(/aa)*(/aa){1,}
    (/aa){0,} (/aa){1,} -> (/aa){1,}
(1+/)aa(/aa){1,}
    (1+/) -> /|{}
(/|/{0})(aa(/aa){1,})
    Distribute
(/aa(/aa){1,})|(/{0}aa(/aa){1,})
    /aa (/aa){1,} -> (/aa){2,}
(/aa){2,}|(/{0}aa(/aa){1,})
    (/aa){2,} -> /aa(/aa){1,}
(/aa(/aa){1,})|(/{0}aa(/aa){1,})
     Factor
(/|/{0})aa(/aa){1,}
     (/|/{0}) -> (1+/)
(1+/)aa(/aa){1,}
(1+/)aa/aa(/aa)*

(1+/)aa/aa(/aa)* (1 cycle so no reverse)
(1+/)aa(/aa)*/(1+/)bb(/bb)*/cc (2 cycles so reverse)

// 1. **Standard Kleene Algebra**


/[~0|1]a[1]a[1](/[1]a[1]a[1])[0,]/[1]/[~0|1]a[1]a[1](/[1]a[1]a[1])[0,]


/?aa(/aa)*?(/aa)*
/[0,1]a[1]a[1](/[1]a[1]a[1])[0,](/[1]a[1]a[1])[1,]

/[0,1]
a[1]
a[1]
(/[1]a[1]a[1])[0,]
(/[1]a[1]a[1])[1,]

------------------------------------------------

/[0]
a[1]
a[1]
(/[1]a[1]a[1])[0,]
(/[1]a[1]a[1])[1,]

/[1]
a[1]
a[1]
(/[1]a[1]a[1])[0,]
(/[1]a[1]a[1])[1,]

------------------------------------------------

/[0]
a[1]
a[1]
(/[1]a[1]a[1])[0]
(/[1]a[1]a[1])[1,]

/[0]
a[1]
a[1]
/[0]
a[0]
a[0]
(/[1]a[1]a[1])[1,]

/[0]
a[1]
a[1]
/[1]
a[1]
a[1]
(/[1]a[1]a[1])[1,]

------------------------------------------------

/[0]
a[1]
a[1]
(/[1]a[1]a[1])[1]
(/[1]a[1]a[1])[1,]

------------------------------------------------

/[1]
a[1]
a[1]
(/[1]a[1]a[1])[0]
(/[1]a[1]a[1])[1,]

------------------------------------------------

/[1]
a[1]
a[1]
(/[1]a[1]a[1])[1]
(/[1]a[1]a[1])[1,]

------------------------------------------------